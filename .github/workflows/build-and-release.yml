# Build Docker image, push to GHCR, and create a GitHub Release
# Triggers:
#  - push to main
#  - push of a tag (refs/tags/*)
#  - manual dispatch with optional inputs: tag, release_name, prerelease

name: Build and publish Docker image

on:
  push:
    branches: [ main ]
    tags: [ 'v*', '*' ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional image/release tag to use (e.g. v1.2.3). If omitted, uses short SHA.'
        required: false
      release_name:
        description: 'Optional release name. Defaults to "Release <tag>"'
        required: false
      prerelease:
        description: 'Mark release as prerelease (true/false)'
        required: false
        default: 'false'

permissions:
  contents: write   # for creating release
  packages: write   # for pushing to ghcr

concurrency:
  group: build-and-publish-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: swiftlytts-bot

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Determine image tag
        id: tag
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          elif [[ -n "${{ github.event.inputs.tag }}" ]]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="sha-$(git rev-parse --short=7 HEAD)"
          fi

          # release name default
          if [[ -n "${{ github.event.inputs.release_name }}" ]]; then
            RELEASE_NAME="${{ github.event.inputs.release_name }}"
          else
            RELEASE_NAME="Release $TAG"
          fi

          REPO_OWNER_LC="$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')"
          IMAGE_NAME_LC="$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')"

          IMAGE_FULL="ghcr.io/${REPO_OWNER_LC}/${IMAGE_NAME_LC}:$TAG"
          IMAGE_LATEST_FULL="ghcr.io/${REPO_OWNER_LC}/${IMAGE_NAME_LC}:latest"

          echo "image_tag=$TAG" >> $GITHUB_OUTPUT
          echo "image=$IMAGE_FULL" >> $GITHUB_OUTPUT
          echo "image_latest=$IMAGE_LATEST_FULL" >> $GITHUB_OUTPUT
          echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.tag.outputs.image }}
            ${{ steps.tag.outputs.image_latest }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image info
        run: |
          echo "Image: ${{ steps.tag.outputs.image }}"
          echo "Tag: ${{ steps.tag.outputs.image_tag }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"
          echo "To pull: docker pull ${{ steps.tag.outputs.image }}"
